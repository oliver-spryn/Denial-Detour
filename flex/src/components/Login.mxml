<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 defaultButton="{login}">
	<fx:Script>
		<![CDATA[
			import com.forwardfour.Config;
			
			import jtd.crypto.Hash;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			[Bindable]
			public var loginData:Object = new Object(); //This should be accessible to the host component
			private var config:Config = new Config();
			
		/**
		 * Validate the contents of the login form and submit the form if validation
		 * has passed and display error feedback if portions of the form are left 
		 * empty
		 */
			private function validate(event:MouseEvent):void {
				var validation:Array = Validator.validateAll(new Array(usernameCheck, passwordCheck));
				
			//Nothing went wrong!
				if (validation.length == 0) {
				//Fire the login request to the server
					loginResponder.token = loginSend.send();
			//At least one form item is empty
				} else {
					var prompt:String;
					
				//Give the user appropriate feedback
					if (validation.length == 1) {
						prompt = "A required field was left empty";
					} else {
						prompt = "The log in form is empty!";
					}
					
					Alert.show(prompt, "Login Error");
				}
			}

		/**
		 * Wait for the results from the login request to comeb back from the server,
		 * and be prepared to handle: 
		 *  - the results of a successful login
		 *  - the results of a failed login
		 */
			private function loginSendResult(event:ResultEvent):void {
			//Login was successful
				if (event.result.login.status.toString() == "true") {
					dispatchEvent(new Event("loggedIn"));
					
				//Reset the login fields, just for added security
					username.text = "";
					password.text = "";
					
				//Extract the user information from the XML and put it in a variable for global use
					this.loginData.first = event.result.login.info.first.toString();
					this.loginData.last = event.result.login.info.last.toString();
			//Login was unsuccessful
				} else {
				//Alert the user that login has failed
					Alert.show("Your username or password was incorrect", "Login Failed");
					
				//Reset the login fields
					username.text = "";
					password.text = "";
				}
			}
			
		/**
		 * Indicate that an error has taken place when communicating with the server
		 */
			private function loginSendFault(event:FaultEvent):void {
				Alert.show("A connection to the host could not be established. Either the server is not responding or you are having networking problems.\n\nError type: " + event.fault.faultString + "\nError code: " + event.fault.faultCode, "Connection Failed");
			}
		]]>
	</fx:Script>
	
	<fx:Metadata>
		[Event(name="loggedIn", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Declarations>
	<!-- Login service operations -->
		<s:HTTPService id="loginSend" url="{this.config.loginScript}"
					   useProxy="false" method="POST" showBusyCursor="true">
			<mx:request> 
				<username>{username.text}</username> 
				<password>{Hash.MD5(password.text)}</password> 
			</mx:request>
		</s:HTTPService>
		
		<s:CallResponder id="loginResponder" result="loginSendResult(event)" fault="loginSendFault(event)"/>
		
	<!-- Validation classes -->
		<mx:StringValidator
			id="usernameCheck" source="{username}" property="text"
			triggerEvent=""
			requiredFieldError="A username is required" />
		
		<mx:StringValidator
			id="passwordCheck" source="{password}" property="text"
			triggerEvent=""
			requiredFieldError="A password is required" />
	</fx:Declarations>
	
	<mx:FormItem label="Username:">
		<s:TextInput id="username"/>
	</mx:FormItem>
	<mx:FormItem label="Password:">
		<s:TextInput id="password" displayAsPassword="true"/>
	</mx:FormItem>
	<mx:FormItem>
		<s:Button label="Login" id="login" click="validate(event)"/>
	</mx:FormItem>
</mx:Form>
